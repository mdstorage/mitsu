{% extends 'CatalogCommonBundle:Catalog:03_complectations.html.twig' %}
{% use 'CatalogToyotaBundle::toyota.base.html.twig' %}
{% block breadcrumbs %}
   <a href="{% if  app.request.get('token') %} {{ path('catalog_toyota_token', parameters) }} {% else %} {{ path('catalog_toyota') }} {% endif %}">Регион, модель, модификация ({{ oContainer.getActiveRegion.getRuname }},
   {{ oContainer.getActiveModel.getRuname }}, {{ oContainer.getActiveModification.getRuname }})</a> / Комплектация
{% endblock breadcrumbs %}



{% block body %}
    {% block head %}<h3>Выбрать комплектацию:</h3>{% endblock head %}
    {% block complectations %}


        <div class="row">

            <div class="complectations">

                <div class="form-group control-group">
                    <form action="{{ path('catalog_toyota_groups', parameters|merge({'complectationCode': '1'})) }}">
                        <div class="col-sm-4">

                            {{ form_widget(form) }}


                            <br>
                            <input type="submit" class="btn btn-primary" value="Далее" />
                        </div>
                    </form>
                </div>


            </div>
        </div>



        <script>


            $('select.form-control').on('change', function(){

                filter('#'.concat($(this).attr('id')));

            });


            function filter(selector) {
                $(selector).each(function() {
                    if ($(selector).val() == '1') location.reload();
                    $.ajax({
                        type:   'POST',
                        async:  false,
                        url:    "{{ path('catalog_toyota_complectation_korobka') }}",
                        data:   { priznak_agregata: selector.substr(-2) ,engine: $(selector).val(), modificationCode: '{{ oContainer.getActiveModification.getCode }}',
                            regionCode: '{{ oContainer.getActiveRegion.getCode }}',
                            modelCode: '{{ oContainer.getActiveModel.getCode }}'},
                        success: function(data){

                            objSel = new Object();
                            optSel = new Object();
                            selector1 = new Object();

                            $.each(JSON.parse(data), function(key, value) {


                                selector1[key] = selector.substr(0, selector.indexOf(selector.substr(-2))).concat(key);

                                objSel[key] = document.getElementById(selector1[key].substr(1,selector1[key].length));

                                optSel[key] = objSel[key].options[objSel[key].selectedIndex].value;

                                $(selector1[key]).empty();
                                $.each((value), function(key1, value1) {

                                    objSel[key].options[objSel[key].options.length] = new Option(value1, key1, true);

                            })
                            });

                            $.each(JSON.parse(data), function(key, value) {

                                for (var i = objSel[key].options.length-1; i >= 0; i--)
                                {
                                    if (objSel[key].options[i].value == optSel[key])

                                        objSel[key].options[i].selected = true;
                                }

                            });

                    }

    });
});
}

</script>

    {% endblock complectations %}
{% endblock body %}


